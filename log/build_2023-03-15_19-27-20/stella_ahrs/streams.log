[2.802s] Invoking command in '/home/jetson/mecanum-ros2/build/stella_ahrs': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/jetson/mecanum-ros2/install/teleop_keyboard:/home/jetson/mecanum-ros2/install/motor_control:/opt/ros/galactic /usr/bin/cmake /home/jetson/mecanum-ros2/src/stella_ahrs -DCMAKE_INSTALL_PREFIX=/home/jetson/mecanum-ros2/install/stella_ahrs
[4.258s] -- The C compiler identification is GNU 8.4.0
[4.260s] -- The CXX compiler identification is GNU 8.4.0
[4.267s] -- Check for working C compiler: /usr/bin/cc
[4.269s] -- Check for working C compiler: /usr/bin/cc -- works
[4.269s] -- Detecting C compiler ABI info
[4.550s] -- Detecting C compiler ABI info - done
[4.606s] -- Detecting C compile features
[4.611s] -- Detecting C compile features - done
[4.628s] -- Check for working CXX compiler: /usr/bin/c++
[4.959s] -- Check for working CXX compiler: /usr/bin/c++ -- works
[4.964s] -- Detecting CXX compiler ABI info
[5.283s] -- Detecting CXX compiler ABI info - done
[5.346s] -- Detecting CXX compile features
[5.350s] -- Detecting CXX compile features - done
[5.385s] -- Found ament_cmake: 1.1.6 (/opt/ros/galactic/share/ament_cmake/cmake)
[5.548s] -- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
[5.549s] -- Using PYTHON_EXECUTABLE: /usr/bin/python3
[6.109s] -- Found rclcpp: 9.2.2 (/opt/ros/galactic/share/rclcpp/cmake)
[6.488s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[6.558s] -- Found rosidl_adapter: 2.2.3 (/opt/ros/galactic/share/rosidl_adapter/cmake)
[7.064s] -- Found OpenSSL: /usr/lib/aarch64-linux-gnu/libcrypto.so (found version "1.1.1f")  
[7.205s] -- Found FastRTPS: /opt/ros/galactic/include  
[7.812s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[8.281s] -- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)
[8.310s] -- Found rmw_cyclonedds_cpp: 0.22.6 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)
[8.434s] -- Using RMW implementation 'rmw_cyclonedds_cpp' as default
[8.439s] -- Looking for pthread.h
[8.723s] -- Looking for pthread.h - found
[8.725s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[8.976s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
[8.977s] -- Looking for pthread_create in pthreads
[9.182s] -- Looking for pthread_create in pthreads - not found
[9.182s] -- Looking for pthread_create in pthread
[9.423s] -- Looking for pthread_create in pthread - found
[9.426s] -- Found Threads: TRUE  
[10.244s] -- Found sensor_msgs: 2.2.4 (/opt/ros/galactic/share/sensor_msgs/cmake)
[10.850s] -- Found tf2: 0.17.5 (/opt/ros/galactic/share/tf2/cmake)
[10.919s] -- Found tf2_ros: 0.17.5 (/opt/ros/galactic/share/tf2_ros/cmake)
[12.986s] -- Configuring done
[13.036s] -- Generating done
[13.042s] -- Build files have been written to: /home/jetson/mecanum-ros2/build/stella_ahrs
[13.083s] Invoked command in '/home/jetson/mecanum-ros2/build/stella_ahrs' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/jetson/mecanum-ros2/install/teleop_keyboard:/home/jetson/mecanum-ros2/install/motor_control:/opt/ros/galactic /usr/bin/cmake /home/jetson/mecanum-ros2/src/stella_ahrs -DCMAKE_INSTALL_PREFIX=/home/jetson/mecanum-ros2/install/stella_ahrs
[13.087s] Invoking command in '/home/jetson/mecanum-ros2/build/stella_ahrs': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/jetson/mecanum-ros2/install/teleop_keyboard:/home/jetson/mecanum-ros2/install/motor_control:/opt/ros/galactic /usr/bin/cmake --build /home/jetson/mecanum-ros2/build/stella_ahrs -- -j4 -l4
[13.228s] [35m[1mScanning dependencies of target stella_ahrs_node[0m
[13.822s] [ 16%] [32mBuilding CXX object CMakeFiles/stella_ahrs_node.dir/src/listener.cpp.o[0m
[13.826s] [ 33%] [32mBuilding CXX object CMakeFiles/stella_ahrs_node.dir/serial/serial.cc.o[0m
[13.828s] [ 50%] [32mBuilding CXX object CMakeFiles/stella_ahrs_node.dir/serial/list_ports_linux.cc.o[0m
[13.829s] [ 66%] [32mBuilding CXX object CMakeFiles/stella_ahrs_node.dir/serial/unix.cc.o[0m
[15.058s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:[m[K In function â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> > glob(const std::vector<std::__cxx11::basic_string<char> >&)[m[Kâ€™:
[15.059s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:66:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
[15.060s]      for(int path_index = 0; [01;35m[Kpath_index < glob_results.gl_pathc[m[K; path_index++)
[15.061s]                              [01;35m[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
[15.063s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:57:9:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kglob_retval[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[15.064s]      int [01;35m[Kglob_retval[m[K = glob(patterns[0].c_str(), 0, NULL, &glob_results);
[15.064s]          [01;35m[K^~~~~~~~~~~[m[K
[15.094s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string format(const char*, ...)[m[Kâ€™:
[15.095s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:246:31:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
[15.096s]          else if( [01;35m[Kreturn_value >= buffer_size_bytes[m[K )
[15.096s]                   [01;35m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
[15.980s] [ 83%] [32mBuilding CXX object CMakeFiles/stella_ahrs_node.dir/mw/mw_ahrs.cpp.o[0m
[21.512s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/src/listener.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[21.512s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/src/listener.cpp:7:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
[21.513s]      char *port = [01;35m[K"/dev/ttyUSB0"[m[K;
[21.513s]                   [01;35m[K^~~~~~~~~~~~~~[m[K
[23.091s] In file included from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/src/listener.cpp:1[m[K:
[23.091s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:[m[K At global scope:
[23.092s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:41:13:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Krun_bool[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
[23.092s]  static bool [01;35m[Krun_bool[m[K = false;
[23.093s]              [01;35m[K^~~~~~~~[m[K
[23.093s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:38:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmag_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
[23.094s]               [01;35m[Kmag_value[m[K[3] = {
[23.094s]               [01;35m[K^~~~~~~~~[m[K
[23.095s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:35:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kdeg_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
[23.095s]               [01;35m[Kdeg_value[m[K[3] = {
[23.096s]               [01;35m[K^~~~~~~~~[m[K
[23.096s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:32:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kgyr_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
[23.097s]               [01;35m[Kgyr_value[m[K[3] = {
[23.097s]               [01;35m[K^~~~~~~~~[m[K
[23.098s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:29:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kacc_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
[23.098s]  static float [01;35m[Kacc_value[m[K[3] = {
[23.099s]               [01;35m[K^~~~~~~~~[m[K
[23.225s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:[m[K In static member function â€˜[01m[Kstatic void* ntrex::MwAhrsRosDriver::MwAhrsRead(void*)[m[Kâ€™:
[23.226s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:48:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
[23.226s]    [01;35m[K}[m[K
[23.227s]    [01;35m[K^[m[K
[23.227s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:12:43:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Karg[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[23.228s]    void *MwAhrsRosDriver::MwAhrsRead([01;35m[Kvoid *arg[m[K)
[23.228s]                                      [01;35m[K~~~~~~^~~[m[K
[23.232s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:[m[K In constructor â€˜[01m[Kntrex::MwAhrsRosDriver::MwAhrsRosDriver(char*, int, int)[m[Kâ€™:
[23.233s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:53:57:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
[23.233s] If you want to declare a parameter that won't change type without a default value use:
[23.234s] `node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.
[23.234s] 
[23.235s] If you want to declare a parameter that can dynamically change type use:
[23.235s] ```
[23.236s] rcl_interfaces::msg::ParameterDescriptor descriptor;
[23.236s] descriptor.dynamic_typing = true;
[23.237s] node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
[23.237s] ``` [[01;35m[K-Wdeprecated-declarations[m[K]
[23.238s]      this->declare_parameter("linear_acceleration_stddev"[01;35m[K)[m[K;
[23.238s]                                                          [01;35m[K^[m[K
[23.239s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[23.239s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[23.239s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[23.240s]                  from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
[23.240s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
[23.241s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[23.241s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[23.242s]    [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[23.242s]    [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[23.243s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:54:54:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
[23.243s] If you want to declare a parameter that won't change type without a default value use:
[23.243s] `node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.
[23.244s] 
[23.244s] If you want to declare a parameter that can dynamically change type use:
[23.245s] ```
[23.245s] rcl_interfaces::msg::ParameterDescriptor descriptor;
[23.246s] descriptor.dynamic_typing = true;
[23.246s] node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
[23.246s] ``` [[01;35m[K-Wdeprecated-declarations[m[K]
[23.247s]      this->declare_parameter("angular_velocity_stddev"[01;35m[K)[m[K;
[23.247s]                                                       [01;35m[K^[m[K
[23.248s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[23.248s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[23.248s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[23.249s]                  from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
[23.249s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
[23.250s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[23.250s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[23.251s]    [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[23.251s]    [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[23.252s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:55:52:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
[23.252s] If you want to declare a parameter that won't change type without a default value use:
[23.252s] `node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.
[23.253s] 
[23.254s] If you want to declare a parameter that can dynamically change type use:
[23.254s] ```
[23.255s] rcl_interfaces::msg::ParameterDescriptor descriptor;
[23.255s] descriptor.dynamic_typing = true;
[23.256s] node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
[23.256s] ``` [[01;35m[K-Wdeprecated-declarations[m[K]
[23.257s]      this->declare_parameter("magnetic_field_stddev"[01;35m[K)[m[K;
[23.257s]                                                     [01;35m[K^[m[K
[23.258s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[23.258s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[23.258s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[23.259s]                  from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
[23.259s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
[23.260s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[23.260s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[23.261s]    [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[23.261s]    [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[23.262s] [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:56:49:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
[23.262s] If you want to declare a parameter that won't change type without a default value use:
[23.263s] `node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.
[23.263s] 
[23.263s] If you want to declare a parameter that can dynamically change type use:
[23.264s] ```
[23.264s] rcl_interfaces::msg::ParameterDescriptor descriptor;
[23.265s] descriptor.dynamic_typing = true;
[23.265s] node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
[23.266s] ``` [[01;35m[K-Wdeprecated-declarations[m[K]
[23.266s]      this->declare_parameter("orientation_stddev"[01;35m[K)[m[K;
[23.267s]                                                  [01;35m[K^[m[K
[23.267s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[23.268s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[23.268s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[23.268s]                  from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
[23.269s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
[23.269s]                  from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[23.270s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[23.270s]    [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[23.271s]    [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[33.248s] [100%] [32m[1mLinking CXX executable stella_ahrs_node[0m
[33.409s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.409s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.410s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.410s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.410s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.411s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.411s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.411s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.412s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
[33.412s] /usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a: error adding symbols: file in wrong format
[33.421s] collect2: error: ld returned 1 exit status
[33.427s] make[2]: *** [CMakeFiles/stella_ahrs_node.dir/build.make:232: stella_ahrs_node] Error 1
[33.428s] make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/stella_ahrs_node.dir/all] Error 2
[33.428s] make: *** [Makefile:141: all] Error 2
[33.435s] Invoked command in '/home/jetson/mecanum-ros2/build/stella_ahrs' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/jetson/mecanum-ros2/install/teleop_keyboard:/home/jetson/mecanum-ros2/install/motor_control:/opt/ros/galactic /usr/bin/cmake --build /home/jetson/mecanum-ros2/build/stella_ahrs -- -j4 -l4
