[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:[m[K In function â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> > glob(const std::vector<std::__cxx11::basic_string<char> >&)[m[Kâ€™:
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:66:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
     for(int path_index = 0; [01;35m[Kpath_index < glob_results.gl_pathc[m[K; path_index++)
                             [01;35m[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:57:9:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kglob_retval[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
     int [01;35m[Kglob_retval[m[K = glob(patterns[0].c_str(), 0, NULL, &glob_results);
         [01;35m[K^~~~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:[m[K In function â€˜[01m[Kstd::__cxx11::string format(const char*, ...)[m[Kâ€™:
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/serial/list_ports_linux.cc:246:31:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
         else if( [01;35m[Kreturn_value >= buffer_size_bytes[m[K )
                  [01;35m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/src/listener.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/src/listener.cpp:7:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids converting a string constant to â€˜[01m[Kchar*[m[Kâ€™ [[01;35m[K-Wwrite-strings[m[K]
     char *port = [01;35m[K"/dev/ttyUSB0"[m[K;
                  [01;35m[K^~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/src/listener.cpp:1[m[K:
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:[m[K At global scope:
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:41:13:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Krun_bool[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
 static bool [01;35m[Krun_bool[m[K = false;
             [01;35m[K^~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:38:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmag_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
              [01;35m[Kmag_value[m[K[3] = {
              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:35:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kdeg_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
              [01;35m[Kdeg_value[m[K[3] = {
              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:32:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kgyr_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
              [01;35m[Kgyr_value[m[K[3] = {
              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:29:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kacc_value[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
 static float [01;35m[Kacc_value[m[K[3] = {
              [01;35m[K^~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:[m[K In static member function â€˜[01m[Kstatic void* ntrex::MwAhrsRosDriver::MwAhrsRead(void*)[m[Kâ€™:
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:48:3:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   [01;35m[K}[m[K
   [01;35m[K^[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:12:43:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Karg[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   void *MwAhrsRosDriver::MwAhrsRead([01;35m[Kvoid *arg[m[K)
                                     [01;35m[K~~~~~~^~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:[m[K In constructor â€˜[01m[Kntrex::MwAhrsRosDriver::MwAhrsRosDriver(char*, int, int)[m[Kâ€™:
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:53:57:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
If you want to declare a parameter that won't change type without a default value use:
`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.

If you want to declare a parameter that can dynamically change type use:
```
rcl_interfaces::msg::ParameterDescriptor descriptor;
descriptor.dynamic_typing = true;
node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
``` [[01;35m[K-Wdeprecated-declarations[m[K]
     this->declare_parameter("linear_acceleration_stddev"[01;35m[K)[m[K;
                                                         [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:54:54:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
If you want to declare a parameter that won't change type without a default value use:
`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.

If you want to declare a parameter that can dynamically change type use:
```
rcl_interfaces::msg::ParameterDescriptor descriptor;
descriptor.dynamic_typing = true;
node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
``` [[01;35m[K-Wdeprecated-declarations[m[K]
     this->declare_parameter("angular_velocity_stddev"[01;35m[K)[m[K;
                                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:55:52:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
If you want to declare a parameter that won't change type without a default value use:
`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.

If you want to declare a parameter that can dynamically change type use:
```
rcl_interfaces::msg::ParameterDescriptor descriptor;
descriptor.dynamic_typing = true;
node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
``` [[01;35m[K-Wdeprecated-declarations[m[K]
     this->declare_parameter("magnetic_field_stddev"[01;35m[K)[m[K;
                                                    [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:56:49:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.
If you want to declare a parameter that won't change type without a default value use:
`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.

If you want to declare a parameter that can dynamically change type use:
```
rcl_interfaces::msg::ParameterDescriptor descriptor;
descriptor.dynamic_typing = true;
node->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);
``` [[01;35m[K-Wdeprecated-declarations[m[K]
     this->declare_parameter("orientation_stddev"[01;35m[K)[m[K;
                                                 [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/opt/ros/galactic/include/tf2_ros/transform_broadcaster.h:38[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/include/mw/mw_ahrs.hpp:5[m[K,
                 from [01m[K/home/jetson/mecanum-ros2/src/stella_ahrs/mw/mw_ahrs.cpp:1[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a(MW_serial.o): Relocations in generic ELF (EM: 62)
/usr/bin/ld: /home/jetson/mecanum-ros2/src/stella_ahrs/lib/MW_AHRS_amd64.a: error adding symbols: file in wrong format
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/stella_ahrs_node.dir/build.make:232: stella_ahrs_node] Error 1
make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/stella_ahrs_node.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
