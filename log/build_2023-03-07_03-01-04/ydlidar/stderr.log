[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:[m[K In function â€˜[01m[Kfhs_lock[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:199:40:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kpid[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  199 | int fhs_lock(const char *filename, [01;35m[Kint pid[m[K) {
      |                                    [01;35m[K~~~~^~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:[m[K In function â€˜[01m[Kuucp_lock[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:281:41:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kpid[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  281 | int uucp_lock(const char *filename, [01;35m[Kint pid[m[K) {
      |                                     [01;35m[K~~~~^~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/timer.h:2[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_timer.cpp:2[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:[m[K In function â€˜[01m[Kbool ydlidar::fileExists(std::string)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ino[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
  240 |   struct stat info = {0[01;35m[K}[m[K;
      |                        [01;35m[K^[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_nlink[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mode[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_uid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_gid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__pad0[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_rdev[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_size[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blksize[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blocks[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_atim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mtim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ctim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__glibc_reserved[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.h:9[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.cpp:39[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:[m[K In function â€˜[01m[Kbool ydlidar::fileExists(std::string)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ino[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
  240 |   struct stat info = {0[01;35m[K}[m[K;
      |                        [01;35m[K^[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_nlink[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mode[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_uid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_gid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__pad0[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_rdev[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_size[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blksize[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blocks[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_atim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mtim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ctim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__glibc_reserved[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.cpp:[m[K In member function â€˜[01m[Kbool serial::Serial::SerialImpl::setCustomBaudRate(long unsigned int)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.cpp:1235:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Klong unsigned int[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
 1235 |   if ([01;35m[Kserial.custom_divisor * baudrate != serial.baud_base[m[K) {
      |       [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/list_ports_linux.cpp:26[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:[m[K In function â€˜[01m[Kbool ydlidar::fileExists(std::string)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ino[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
  240 |   struct stat info = {0[01;35m[K}[m[K;
      |                        [01;35m[K^[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_nlink[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mode[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_uid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_gid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__pad0[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_rdev[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_size[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blksize[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blocks[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_atim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mtim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ctim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__glibc_reserved[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/list_ports_linux.cpp:[m[K In function â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> > glob(const std::vector<std::__cxx11::basic_string<char> >&)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/list_ports_linux.cpp:58:7:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kglob_retval[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
   58 |   int [01;35m[Kglob_retval[m[K = glob(patterns[0].c_str(), 0, NULL, &glob_results);
      |       [01;35m[K^~~~~~~~~~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:54[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:34[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:[m[K In function â€˜[01m[Kbool ydlidar::fileExists(std::string)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ino[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
  240 |   struct stat info = {0[01;35m[K}[m[K;
      |                        [01;35m[K^[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_nlink[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mode[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_uid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_gid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__pad0[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_rdev[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_size[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blksize[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blocks[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_atim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mtim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ctim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__glibc_reserved[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:56[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:34[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:[m[K In static member function â€˜[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
      |                                                                            [01;35m[K^~~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:58[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:34[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:[m[K In function â€˜[01m[Kbool ydlidar::isSupportMotorCtrl(int)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:414:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kret[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  414 |   bool [01;35m[Kret[m[K = false;
      |        [01;35m[K^~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:54[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:34[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:[m[K In function â€˜[01m[Kbool ydlidar::fileExists(std::string)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ino[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
  240 |   struct stat info = {0[01;35m[K}[m[K;
      |                        [01;35m[K^[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_nlink[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mode[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_uid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_gid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__pad0[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_rdev[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_size[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blksize[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blocks[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_atim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mtim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ctim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__glibc_reserved[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:56[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:34[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:[m[K In static member function â€˜[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
      |                                                                            [01;35m[K^~~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:58[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:34[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:[m[K In function â€˜[01m[Kbool ydlidar::isSupportMotorCtrl(int)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:414:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kret[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  414 |   bool [01;35m[Kret[m[K = false;
      |        [01;35m[K^~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:[m[K In member function â€˜[01m[Kbool CYdLidar::doProcessSimple(LaserScan&, bool&)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:216:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  216 |     for (int i = 0; [01;35m[Ki < count[m[K; i++) {
      |                     [01;35m[K~~^~~~~~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/serial.cpp:11[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:[m[K In function â€˜[01m[Kbool ydlidar::fileExists(std::string)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ino[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
  240 |   struct stat info = {0[01;35m[K}[m[K;
      |                        [01;35m[K^[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_nlink[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mode[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_uid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_gid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__pad0[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_rdev[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_size[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blksize[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blocks[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_atim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mtim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ctim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__glibc_reserved[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:[m[K In member function â€˜[01m[Kresult_t ydlidar::YDlidarDriver::waitPackage(node_info*, uint32_t)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:992:95:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around arithmetic in operand of â€˜[01m[K|[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
  992 |                                          [01;35m[Kpackages.packageSampleDistance[package_Sample_Index] &[m[K
      |                                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
  993 | [01;35m[K                                         0x0003[m[K)) << LIDAR_RESP_MEASUREMENT_QUALITY_SHIFT;
      |                                          [01;35m[K~~~~~~[m[K                                                
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/common.h:47[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/serial.cpp:12[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:[m[K In static member function â€˜[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
      |                                                                            [01;35m[K^~~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:54[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:26[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:[m[K In function â€˜[01m[Kbool ydlidar::fileExists(std::string)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ino[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
  240 |   struct stat info = {0[01;35m[K}[m[K;
      |                        [01;35m[K^[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_nlink[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mode[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_uid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_gid[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__pad0[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_rdev[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_size[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blksize[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_blocks[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_atim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_mtim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::st_ctim[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member â€˜[01m[Kstat::__glibc_reserved[m[Kâ€™ [[01;35m[K-Wmissing-field-initializers[m[K]
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:56[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:26[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:[m[K In static member function â€˜[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
      |                                                                            [01;35m[K^~~~[m[K
In file included from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:58[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:26[m[K:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:[m[K In function â€˜[01m[Kbool ydlidar::isSupportMotorCtrl(int)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:414:8:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kret[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  414 |   bool [01;35m[Kret[m[K = false;
      |        [01;35m[K^~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:78:33:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   78 |   node->declare_parameter("port"[01;35m[K)[m[K;
      |                                 [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:81:37:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   81 |   node->declare_parameter("frame_id"[01;35m[K)[m[K;
      |                                     [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:84:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   84 |   node->declare_parameter("ignore_array"[01;35m[K)[m[K;
      |                                         [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:87:37:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   87 |   node->declare_parameter("baudrate"[01;35m[K)[m[K;
      |                                     [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:90:38:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   90 |   node->declare_parameter("samp_rate"[01;35m[K)[m[K;
      |                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:93:45:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   93 |   node->declare_parameter("resolution_fixed"[01;35m[K)[m[K;
      |                                             [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:96:42:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   96 |   node->declare_parameter("singleChannel"[01;35m[K)[m[K;
      |                                          [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:99:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   99 |   node->declare_parameter("auto_reconnect"[01;35m[K)[m[K;
      |                                           [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:102:38:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
  102 |   node->declare_parameter("reversion"[01;35m[K)[m[K;
      |                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:105:39:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
  105 |   node->declare_parameter("isToFLidar"[01;35m[K)[m[K;
      |                                       [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:108:38:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
  108 |   node->declare_parameter("angle_max"[01;35m[K)[m[K;
      |                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:111:38:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
  111 |   node->declare_parameter("angle_min"[01;35m[K)[m[K;
      |                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:114:38:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
  114 |   node->declare_parameter("max_range"[01;35m[K)[m[K;
      |                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:117:38:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
  117 |   node->declare_parameter("min_range"[01;35m[K)[m[K;
      |                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:120:38:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
  120 |   node->declare_parameter("frequency"[01;35m[K)[m[K;
      |                                      [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:208:22:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<LaserPoint>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  208 |       for(int i=0; [01;35m[Ki < scan.points.size()[m[K; i++) {
      |                    [01;35m[K~~^~~~~~~~~~~~~~~~~~~~[m[K
