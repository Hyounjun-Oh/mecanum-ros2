[0.000000] (-) TimerEvent: {}
[0.000494] (mecanum_description) JobQueued: {'identifier': 'mecanum_description', 'dependencies': OrderedDict()}
[0.000538] (motor_control) JobQueued: {'identifier': 'motor_control', 'dependencies': OrderedDict()}
[0.000566] (teleop_keyboard) JobQueued: {'identifier': 'teleop_keyboard', 'dependencies': OrderedDict()}
[0.000591] (ydlidar) JobQueued: {'identifier': 'ydlidar', 'dependencies': OrderedDict()}
[0.001164] (mecanum_description) JobStarted: {'identifier': 'mecanum_description'}
[0.010629] (motor_control) JobStarted: {'identifier': 'motor_control'}
[0.017581] (teleop_keyboard) JobStarted: {'identifier': 'teleop_keyboard'}
[0.023842] (ydlidar) JobStarted: {'identifier': 'ydlidar'}
[0.030492] (mecanum_description) JobProgress: {'identifier': 'mecanum_description', 'progress': 'cmake'}
[0.030754] (mecanum_description) Command: {'cmd': ['/usr/bin/cmake', '/home/ohj/mecanum-ros2/src/mecanum_description', '-DCMAKE_INSTALL_PREFIX=/home/ohj/mecanum-ros2/install/mecanum_description'], 'cwd': '/home/ohj/mecanum-ros2/build/mecanum_description', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ohj'), ('LC_TIME', 'ko_KR.UTF-8'), ('SSH_AGENT_PID', '2054'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/ohj'), ('OLDPWD', '/home/ohj/mecanum-ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('MANAGERPID', '1805'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3103'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'ohj'), ('JOURNAL_STREAM', '8:48869'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ohj'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128'), ('INVOCATION_ID', 'a24701f73b2d40fe8a769f82d9a493b6'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ko_KR.UTF-8'), ('TERMINATOR_UUID', 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ohj/mecanum-ros2/build/mecanum_description'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/galactic')]), 'shell': False}
[0.099805] (-) TimerEvent: {}
[0.200214] (-) TimerEvent: {}
[0.300498] (-) TimerEvent: {}
[0.343509] (ydlidar) JobProgress: {'identifier': 'ydlidar', 'progress': 'cmake'}
[0.343839] (mecanum_description) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[0.344986] (mecanum_description) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[0.345266] (mecanum_description) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.345322] (mecanum_description) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.345366] (mecanum_description) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.345410] (ydlidar) Command: {'cmd': ['/usr/bin/cmake', '/home/ohj/mecanum-ros2/src/ydlidar_ros2', '-DCMAKE_INSTALL_PREFIX=/home/ohj/mecanum-ros2/install/ydlidar'], 'cwd': '/home/ohj/mecanum-ros2/build/ydlidar', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ohj'), ('LC_TIME', 'ko_KR.UTF-8'), ('SSH_AGENT_PID', '2054'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/ohj'), ('OLDPWD', '/home/ohj/mecanum-ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('MANAGERPID', '1805'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3103'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'ohj'), ('JOURNAL_STREAM', '8:48869'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ohj'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128'), ('INVOCATION_ID', 'a24701f73b2d40fe8a769f82d9a493b6'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ko_KR.UTF-8'), ('TERMINATOR_UUID', 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ohj/mecanum-ros2/build/ydlidar'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/galactic')]), 'shell': False}
[0.387338] (ydlidar) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[0.390703] (mecanum_description) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.400612] (-) TimerEvent: {}
[0.403500] (mecanum_description) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.403793] (mecanum_description) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.405717] (mecanum_description) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.432757] (ydlidar) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[0.435605] (ydlidar) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.476118] (mecanum_description) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.476830] (mecanum_description) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.492382] (ydlidar) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.493625] (ydlidar) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.500691] (-) TimerEvent: {}
[0.539198] (mecanum_description) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.546786] (mecanum_description) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.547092] (mecanum_description) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.552443] (mecanum_description) StdoutLine: {'line': b'-- Found ament_cmake: 1.1.6 (/opt/ros/galactic/share/ament_cmake/cmake)\n'}
[0.556121] (ydlidar) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.563105] (ydlidar) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.563351] (ydlidar) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.564798] (ydlidar) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.577331] (mecanum_description) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") \n'}
[0.577537] (mecanum_description) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.600776] (-) TimerEvent: {}
[0.634611] (ydlidar) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.636153] (ydlidar) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.647660] (mecanum_description) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.10.7 (/opt/ros/galactic/share/ament_lint_auto/cmake)\n'}
[0.686452] (motor_control) Command: {'cmd': ['/usr/bin/python3', 'setup.py', 'egg_info', '--egg-base', '../../build/motor_control', 'build', '--build-base', '/home/ohj/mecanum-ros2/build/motor_control/build', 'install', '--record', '/home/ohj/mecanum-ros2/build/motor_control/install.log', '--single-version-externally-managed'], 'cwd': '/home/ohj/mecanum-ros2/src/motor_control', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'ohj', 'LC_TIME': 'ko_KR.UTF-8', 'SSH_AGENT_PID': '2054', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib', 'HOME': '/home/ohj', 'OLDPWD': '/home/ohj/mecanum-ros2', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'LC_MONETARY': 'ko_KR.UTF-8', 'MANAGERPID': '1805', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3103', 'IM_CONFIG_PHASE': '1', 'ROS_DISTRO': 'galactic', 'LOGNAME': 'ohj', 'JOURNAL_STREAM': '8:48869', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'ohj', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'SESSION_MANAGER': 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128', 'INVOCATION_ID': 'a24701f73b2d40fe8a769f82d9a493b6', 'XDG_MENU_PREFIX': 'gnome-', 'LC_ADDRESS': 'ko_KR.UTF-8', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'LC_TELEPHONE': 'ko_KR.UTF-8', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/opt/ros/galactic', 'SHELL': '/bin/bash', 'LC_NAME': 'ko_KR.UTF-8', 'TERMINATOR_UUID': 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'LC_MEASUREMENT': 'ko_KR.UTF-8', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'LC_IDENTIFICATION': 'ko_KR.UTF-8', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/ohj/mecanum-ros2/build/motor_control', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/ohj/mecanum-ros2/build/motor_control/prefix_override:/home/ohj/mecanum-ros2/install/motor_control/lib/python3.8/site-packages:/opt/ros/galactic/lib/python3.8/site-packages', 'LC_NUMERIC': 'ko_KR.UTF-8', 'LC_PAPER': 'ko_KR.UTF-8', 'COLCON': '1', 'VTE_VERSION': '6003'}, 'shell': False}
[0.689470] (teleop_keyboard) Command: {'cmd': ['/usr/bin/python3', 'setup.py', 'egg_info', '--egg-base', '../../build/teleop_keyboard', 'build', '--build-base', '/home/ohj/mecanum-ros2/build/teleop_keyboard/build', 'install', '--record', '/home/ohj/mecanum-ros2/build/teleop_keyboard/install.log', '--single-version-externally-managed'], 'cwd': '/home/ohj/mecanum-ros2/src/teleop_keyboard', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'ohj', 'LC_TIME': 'ko_KR.UTF-8', 'SSH_AGENT_PID': '2054', 'XDG_SESSION_TYPE': 'x11', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib', 'HOME': '/home/ohj', 'OLDPWD': '/home/ohj/mecanum-ros2', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'LC_MONETARY': 'ko_KR.UTF-8', 'MANAGERPID': '1805', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '3103', 'IM_CONFIG_PHASE': '1', 'ROS_DISTRO': 'galactic', 'LOGNAME': 'ohj', 'JOURNAL_STREAM': '8:48869', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'ohj', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'ROS_LOCALHOST_ONLY': '0', 'WINDOWPATH': '2', 'PATH': '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'SESSION_MANAGER': 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128', 'INVOCATION_ID': 'a24701f73b2d40fe8a769f82d9a493b6', 'XDG_MENU_PREFIX': 'gnome-', 'LC_ADDRESS': 'ko_KR.UTF-8', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'LC_TELEPHONE': 'ko_KR.UTF-8', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/opt/ros/galactic', 'SHELL': '/bin/bash', 'LC_NAME': 'ko_KR.UTF-8', 'TERMINATOR_UUID': 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'LC_MEASUREMENT': 'ko_KR.UTF-8', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'LC_IDENTIFICATION': 'ko_KR.UTF-8', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/ohj/mecanum-ros2/build/teleop_keyboard', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/ohj/mecanum-ros2/build/teleop_keyboard/prefix_override:/home/ohj/mecanum-ros2/install/teleop_keyboard/lib/python3.8/site-packages:/opt/ros/galactic/lib/python3.8/site-packages', 'LC_NUMERIC': 'ko_KR.UTF-8', 'LC_PAPER': 'ko_KR.UTF-8', 'COLCON': '1', 'VTE_VERSION': '6003'}, 'shell': False}
[0.700895] (-) TimerEvent: {}
[0.709681] (ydlidar) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.713506] (mecanum_description) StdoutLine: {'line': b"-- Added test 'copyright' to check source files copyright and LICENSE\n"}
[0.715290] (mecanum_description) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[0.715725] (mecanum_description) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[0.716136] (mecanum_description) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the style conventions in PEP 257\n"}
[0.716867] (mecanum_description) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[0.718395] (mecanum_description) StdoutLine: {'line': b'-- Configuring done\n'}
[0.719522] (mecanum_description) StdoutLine: {'line': b'-- Generating done\n'}
[0.720053] (mecanum_description) StdoutLine: {'line': b'-- Build files have been written to: /home/ohj/mecanum-ros2/build/mecanum_description\n'}
[0.720507] (ydlidar) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.720830] (ydlidar) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.722500] (ydlidar) StdoutLine: {'line': b'-- Found ament_cmake: 1.1.6 (/opt/ros/galactic/share/ament_cmake/cmake)\n'}
[0.723110] (mecanum_description) CommandEnded: {'returncode': 0}
[0.723886] (mecanum_description) JobProgress: {'identifier': 'mecanum_description', 'progress': 'build'}
[0.726196] (mecanum_description) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ohj/mecanum-ros2/build/mecanum_description', '--', '-j16', '-l16'], 'cwd': '/home/ohj/mecanum-ros2/build/mecanum_description', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ohj'), ('LC_TIME', 'ko_KR.UTF-8'), ('SSH_AGENT_PID', '2054'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/ohj'), ('OLDPWD', '/home/ohj/mecanum-ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('MANAGERPID', '1805'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3103'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'ohj'), ('JOURNAL_STREAM', '8:48869'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ohj'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128'), ('INVOCATION_ID', 'a24701f73b2d40fe8a769f82d9a493b6'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ko_KR.UTF-8'), ('TERMINATOR_UUID', 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ohj/mecanum-ros2/build/mecanum_description'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/galactic')]), 'shell': False}
[0.741534] (ydlidar) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") \n'}
[0.741764] (ydlidar) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.755300] (mecanum_description) CommandEnded: {'returncode': 0}
[0.774067] (mecanum_description) JobProgress: {'identifier': 'mecanum_description', 'progress': 'install'}
[0.787838] (mecanum_description) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ohj/mecanum-ros2/build/mecanum_description'], 'cwd': '/home/ohj/mecanum-ros2/build/mecanum_description', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ohj'), ('LC_TIME', 'ko_KR.UTF-8'), ('SSH_AGENT_PID', '2054'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/ohj'), ('OLDPWD', '/home/ohj/mecanum-ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('MANAGERPID', '1805'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3103'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'ohj'), ('JOURNAL_STREAM', '8:48869'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ohj'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128'), ('INVOCATION_ID', 'a24701f73b2d40fe8a769f82d9a493b6'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ko_KR.UTF-8'), ('TERMINATOR_UUID', 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ohj/mecanum-ros2/build/mecanum_description'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/galactic')]), 'shell': False}
[0.797322] (mecanum_description) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.797530] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description//launch\n'}
[0.797714] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description//launch/mecanum.launch.py\n'}
[0.798312] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/ament_index/resource_index/package_run_dependencies/mecanum_description\n'}
[0.798516] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/ament_index/resource_index/parent_prefix_path/mecanum_description\n'}
[0.798763] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/environment/ament_prefix_path.sh\n'}
[0.799017] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/environment/ament_prefix_path.dsv\n'}
[0.799177] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/environment/path.sh\n'}
[0.799473] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/environment/path.dsv\n'}
[0.799591] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/local_setup.bash\n'}
[0.799689] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/local_setup.sh\n'}
[0.799783] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/local_setup.zsh\n'}
[0.799915] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/local_setup.dsv\n'}
[0.800002] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/package.dsv\n'}
[0.800082] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/ament_index/resource_index/packages/mecanum_description\n'}
[0.800159] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/cmake/mecanum_descriptionConfig.cmake\n'}
[0.800236] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/cmake/mecanum_descriptionConfig-version.cmake\n'}
[0.800352] (mecanum_description) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/mecanum_description/share/mecanum_description/package.xml\n'}
[0.801008] (mecanum_description) CommandEnded: {'returncode': 0}
[0.801906] (-) TimerEvent: {}
[0.802069] (ydlidar) StdoutLine: {'line': b'-- Found rclcpp: 9.2.2 (/opt/ros/galactic/share/rclcpp/cmake)\n'}
[0.830677] (teleop_keyboard) StdoutLine: {'line': b'running egg_info\n'}
[0.831037] (teleop_keyboard) StdoutLine: {'line': b'creating ../../build/teleop_keyboard/teleop_keyboard.egg-info\n'}
[0.831218] (teleop_keyboard) StdoutLine: {'line': b'writing ../../build/teleop_keyboard/teleop_keyboard.egg-info/PKG-INFO\n'}
[0.831580] (teleop_keyboard) StdoutLine: {'line': b'writing dependency_links to ../../build/teleop_keyboard/teleop_keyboard.egg-info/dependency_links.txt\n'}
[0.831650] (teleop_keyboard) StdoutLine: {'line': b'writing entry points to ../../build/teleop_keyboard/teleop_keyboard.egg-info/entry_points.txt\n'}
[0.831700] (teleop_keyboard) StdoutLine: {'line': b'writing requirements to ../../build/teleop_keyboard/teleop_keyboard.egg-info/requires.txt\n'}
[0.831745] (teleop_keyboard) StdoutLine: {'line': b'writing top-level names to ../../build/teleop_keyboard/teleop_keyboard.egg-info/top_level.txt\n'}
[0.832435] (motor_control) StdoutLine: {'line': b'running egg_info\n'}
[0.832776] (motor_control) StdoutLine: {'line': b'creating ../../build/motor_control/motor_control.egg-info\n'}
[0.832875] (motor_control) StdoutLine: {'line': b'writing ../../build/motor_control/motor_control.egg-info/PKG-INFO\n'}
[0.833021] (motor_control) StdoutLine: {'line': b'writing dependency_links to ../../build/motor_control/motor_control.egg-info/dependency_links.txt\n'}
[0.833100] (motor_control) StdoutLine: {'line': b'writing entry points to ../../build/motor_control/motor_control.egg-info/entry_points.txt\n'}
[0.833163] (motor_control) StdoutLine: {'line': b'writing requirements to ../../build/motor_control/motor_control.egg-info/requires.txt\n'}
[0.833224] (motor_control) StdoutLine: {'line': b'writing top-level names to ../../build/motor_control/motor_control.egg-info/top_level.txt\n'}
[0.833284] (teleop_keyboard) StdoutLine: {'line': b"writing manifest file '../../build/teleop_keyboard/teleop_keyboard.egg-info/SOURCES.txt'\n"}
[0.833893] (motor_control) StdoutLine: {'line': b"writing manifest file '../../build/motor_control/motor_control.egg-info/SOURCES.txt'\n"}
[0.850394] (ydlidar) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.850649] (mecanum_description) JobEnded: {'identifier': 'mecanum_description', 'rc': 0}
[0.856520] (ydlidar) StdoutLine: {'line': b'-- Found rosidl_adapter: 2.2.3 (/opt/ros/galactic/share/rosidl_adapter/cmake)\n'}
[0.858047] (motor_control) StdoutLine: {'line': b"reading manifest file '../../build/motor_control/motor_control.egg-info/SOURCES.txt'\n"}
[0.858696] (motor_control) StdoutLine: {'line': b"writing manifest file '../../build/motor_control/motor_control.egg-info/SOURCES.txt'\n"}
[0.858801] (motor_control) StdoutLine: {'line': b'running build\n'}
[0.858933] (motor_control) StdoutLine: {'line': b'running build_py\n'}
[0.859055] (motor_control) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/build/motor_control/build\n'}
[0.859147] (motor_control) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/build/motor_control/build/lib\n'}
[0.859284] (motor_control) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/build/motor_control/build/lib/motor_control\n'}
[0.859364] (motor_control) StdoutLine: {'line': b'copying motor_control/motor_control.py -> /home/ohj/mecanum-ros2/build/motor_control/build/lib/motor_control\n'}
[0.859436] (motor_control) StdoutLine: {'line': b'copying motor_control/__init__.py -> /home/ohj/mecanum-ros2/build/motor_control/build/lib/motor_control\n'}
[0.859504] (motor_control) StdoutLine: {'line': b'running install\n'}
[0.859805] (motor_control) StdoutLine: {'line': b'running install_lib\n'}
[0.860412] (motor_control) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/motor_control/lib/python3.8/site-packages/motor_control\n'}
[0.860618] (teleop_keyboard) StdoutLine: {'line': b"reading manifest file '../../build/teleop_keyboard/teleop_keyboard.egg-info/SOURCES.txt'\n"}
[0.860703] (motor_control) StdoutLine: {'line': b'copying /home/ohj/mecanum-ros2/build/motor_control/build/lib/motor_control/motor_control.py -> /home/ohj/mecanum-ros2/install/motor_control/lib/python3.8/site-packages/motor_control\n'}
[0.860771] (motor_control) StdoutLine: {'line': b'copying /home/ohj/mecanum-ros2/build/motor_control/build/lib/motor_control/__init__.py -> /home/ohj/mecanum-ros2/install/motor_control/lib/python3.8/site-packages/motor_control\n'}
[0.860880] (motor_control) StdoutLine: {'line': b'byte-compiling /home/ohj/mecanum-ros2/install/motor_control/lib/python3.8/site-packages/motor_control/motor_control.py to motor_control.cpython-38.pyc\n'}
[0.861121] (teleop_keyboard) StdoutLine: {'line': b"writing manifest file '../../build/teleop_keyboard/teleop_keyboard.egg-info/SOURCES.txt'\n"}
[0.861239] (teleop_keyboard) StdoutLine: {'line': b'running build\n'}
[0.861334] (teleop_keyboard) StdoutLine: {'line': b'running build_py\n'}
[0.861455] (teleop_keyboard) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/build/teleop_keyboard/build\n'}
[0.861515] (teleop_keyboard) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/build/teleop_keyboard/build/lib\n'}
[0.861559] (teleop_keyboard) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/build/teleop_keyboard/build/lib/teleop_keyboard\n'}
[0.861601] (teleop_keyboard) StdoutLine: {'line': b'copying teleop_keyboard/teleop_keyboard.py -> /home/ohj/mecanum-ros2/build/teleop_keyboard/build/lib/teleop_keyboard\n'}
[0.861836] (teleop_keyboard) StdoutLine: {'line': b'copying teleop_keyboard/__init__.py -> /home/ohj/mecanum-ros2/build/teleop_keyboard/build/lib/teleop_keyboard\n'}
[0.861942] (motor_control) StdoutLine: {'line': b'byte-compiling /home/ohj/mecanum-ros2/install/motor_control/lib/python3.8/site-packages/motor_control/__init__.py to __init__.cpython-38.pyc\n'}
[0.862039] (teleop_keyboard) StdoutLine: {'line': b'running install\n'}
[0.862128] (motor_control) StdoutLine: {'line': b'running install_data\n'}
[0.862287] (motor_control) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/motor_control/share/ament_index\n'}
[0.862378] (motor_control) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/motor_control/share/ament_index/resource_index\n'}
[0.862471] (motor_control) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/motor_control/share/ament_index/resource_index/packages\n'}
[0.862546] (motor_control) StdoutLine: {'line': b'copying resource/motor_control -> /home/ohj/mecanum-ros2/install/motor_control/share/ament_index/resource_index/packages\n'}
[0.862651] (motor_control) StdoutLine: {'line': b'copying package.xml -> /home/ohj/mecanum-ros2/install/motor_control/share/motor_control\n'}
[0.862713] (motor_control) StdoutLine: {'line': b'running install_egg_info\n'}
[0.862782] (teleop_keyboard) StdoutLine: {'line': b'running install_lib\n'}
[0.863296] (teleop_keyboard) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/teleop_keyboard/lib/python3.8/site-packages/teleop_keyboard\n'}
[0.863405] (teleop_keyboard) StdoutLine: {'line': b'copying /home/ohj/mecanum-ros2/build/teleop_keyboard/build/lib/teleop_keyboard/teleop_keyboard.py -> /home/ohj/mecanum-ros2/install/teleop_keyboard/lib/python3.8/site-packages/teleop_keyboard\n'}
[0.863515] (motor_control) StdoutLine: {'line': b'Copying ../../build/motor_control/motor_control.egg-info to /home/ohj/mecanum-ros2/install/motor_control/lib/python3.8/site-packages/motor_control-0.0.0-py3.8.egg-info\n'}
[0.863612] (teleop_keyboard) StdoutLine: {'line': b'copying /home/ohj/mecanum-ros2/build/teleop_keyboard/build/lib/teleop_keyboard/__init__.py -> /home/ohj/mecanum-ros2/install/teleop_keyboard/lib/python3.8/site-packages/teleop_keyboard\n'}
[0.863811] (teleop_keyboard) StdoutLine: {'line': b'byte-compiling /home/ohj/mecanum-ros2/install/teleop_keyboard/lib/python3.8/site-packages/teleop_keyboard/teleop_keyboard.py to teleop_keyboard.cpython-38.pyc\n'}
[0.863907] (motor_control) StdoutLine: {'line': b'running install_scripts\n'}
[0.865166] (teleop_keyboard) StdoutLine: {'line': b'byte-compiling /home/ohj/mecanum-ros2/install/teleop_keyboard/lib/python3.8/site-packages/teleop_keyboard/__init__.py to __init__.cpython-38.pyc\n'}
[0.865283] (teleop_keyboard) StdoutLine: {'line': b'running install_data\n'}
[0.865670] (teleop_keyboard) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/teleop_keyboard/share/ament_index\n'}
[0.865819] (teleop_keyboard) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/teleop_keyboard/share/ament_index/resource_index\n'}
[0.865902] (teleop_keyboard) StdoutLine: {'line': b'creating /home/ohj/mecanum-ros2/install/teleop_keyboard/share/ament_index/resource_index/packages\n'}
[0.865982] (teleop_keyboard) StdoutLine: {'line': b'copying resource/teleop_keyboard -> /home/ohj/mecanum-ros2/install/teleop_keyboard/share/ament_index/resource_index/packages\n'}
[0.866079] (teleop_keyboard) StdoutLine: {'line': b'copying package.xml -> /home/ohj/mecanum-ros2/install/teleop_keyboard/share/teleop_keyboard\n'}
[0.866155] (teleop_keyboard) StdoutLine: {'line': b'running install_egg_info\n'}
[0.867063] (teleop_keyboard) StdoutLine: {'line': b'Copying ../../build/teleop_keyboard/teleop_keyboard.egg-info to /home/ohj/mecanum-ros2/install/teleop_keyboard/lib/python3.8/site-packages/teleop_keyboard-0.0.1-py3.8.egg-info\n'}
[0.867585] (teleop_keyboard) StdoutLine: {'line': b'running install_scripts\n'}
[0.875029] (motor_control) StdoutLine: {'line': b'Installing motor_control script to /home/ohj/mecanum-ros2/install/motor_control/lib/motor_control\n'}
[0.875252] (motor_control) StdoutLine: {'line': b"writing list of installed files to '/home/ohj/mecanum-ros2/build/motor_control/install.log'\n"}
[0.878600] (teleop_keyboard) StdoutLine: {'line': b'Installing teleop_keyboard script to /home/ohj/mecanum-ros2/install/teleop_keyboard/lib/teleop_keyboard\n'}
[0.878864] (teleop_keyboard) StdoutLine: {'line': b"writing list of installed files to '/home/ohj/mecanum-ros2/build/teleop_keyboard/install.log'\n"}
[0.895352] (motor_control) CommandEnded: {'returncode': 0}
[0.900583] (motor_control) JobEnded: {'identifier': 'motor_control', 'rc': 0}
[0.902643] (teleop_keyboard) CommandEnded: {'returncode': 0}
[0.902994] (-) TimerEvent: {}
[0.907128] (teleop_keyboard) JobEnded: {'identifier': 'teleop_keyboard', 'rc': 0}
[0.929407] (ydlidar) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  \n'}
[0.949019] (ydlidar) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/galactic/include  \n'}
[1.003112] (-) TimerEvent: {}
[1.004055] (ydlidar) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.049049] (ydlidar) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)\n'}
[1.051637] (ydlidar) StdoutLine: {'line': b'-- Found rmw_cyclonedds_cpp: 0.22.6 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)\n'}
[1.065839] (ydlidar) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_cyclonedds_cpp' as default\n"}
[1.066912] (ydlidar) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[1.103245] (-) TimerEvent: {}
[1.139713] (ydlidar) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[1.140188] (ydlidar) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[1.204073] (-) TimerEvent: {}
[1.204670] (ydlidar) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n'}
[1.205022] (ydlidar) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads\n'}
[1.277161] (ydlidar) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads - not found\n'}
[1.277676] (ydlidar) StdoutLine: {'line': b'-- Looking for pthread_create in pthread\n'}
[1.304225] (-) TimerEvent: {}
[1.349611] (ydlidar) StdoutLine: {'line': b'-- Looking for pthread_create in pthread - found\n'}
[1.351440] (ydlidar) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[1.404322] (-) TimerEvent: {}
[1.462696] (ydlidar) StdoutLine: {'line': b'-- Found sensor_msgs: 2.2.4 (/opt/ros/galactic/share/sensor_msgs/cmake)\n'}
[1.504423] (-) TimerEvent: {}
[1.542793] (ydlidar) StdoutLine: {'line': b'-- Found visualization_msgs: 2.2.4 (/opt/ros/galactic/share/visualization_msgs/cmake)\n'}
[1.593423] (ydlidar) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.10.7 (/opt/ros/galactic/share/ament_lint_auto/cmake)\n'}
[1.604560] (-) TimerEvent: {}
[1.653971] (ydlidar) StdoutLine: {'line': b"-- Added test 'copyright' to check source files copyright and LICENSE\n"}
[1.664639] (ydlidar) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[1.664952] (ydlidar) StdoutLine: {'line': b'-- Configured cppcheck include dirs: /home/ohj/mecanum-ros2/src/ydlidar_ros2/src;/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include;/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src\n'}
[1.665103] (ydlidar) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[1.673485] (ydlidar) StdoutLine: {'line': b"-- Added test 'cpplint' to check C / C++ code against the Google style\n"}
[1.673629] (ydlidar) StdoutLine: {'line': b'-- Configured cpplint exclude dirs and/or files: \n'}
[1.674823] (ydlidar) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[1.677200] (ydlidar) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[1.678419] (ydlidar) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the style conventions in PEP 257\n"}
[1.687033] (ydlidar) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[1.687175] (ydlidar) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[1.688304] (ydlidar) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[1.690183] (ydlidar) StdoutLine: {'line': b'-- Configuring done\n'}
[1.699665] (ydlidar) StdoutLine: {'line': b'-- Generating done\n'}
[1.700487] (ydlidar) StdoutLine: {'line': b'-- Build files have been written to: /home/ohj/mecanum-ros2/build/ydlidar\n'}
[1.704656] (-) TimerEvent: {}
[1.706574] (ydlidar) CommandEnded: {'returncode': 0}
[1.707382] (ydlidar) JobProgress: {'identifier': 'ydlidar', 'progress': 'build'}
[1.709450] (ydlidar) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ohj/mecanum-ros2/build/ydlidar', '--', '-j16', '-l16'], 'cwd': '/home/ohj/mecanum-ros2/build/ydlidar', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ohj'), ('LC_TIME', 'ko_KR.UTF-8'), ('SSH_AGENT_PID', '2054'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/ohj'), ('OLDPWD', '/home/ohj/mecanum-ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('MANAGERPID', '1805'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3103'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'ohj'), ('JOURNAL_STREAM', '8:48869'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ohj'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128'), ('INVOCATION_ID', 'a24701f73b2d40fe8a769f82d9a493b6'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ko_KR.UTF-8'), ('TERMINATOR_UUID', 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ohj/mecanum-ros2/build/ydlidar'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/galactic')]), 'shell': False}
[1.750226] (ydlidar) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_node\x1b[0m\n'}
[1.750547] (ydlidar) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_client\x1b[0m\n'}
[1.804791] (-) TimerEvent: {}
[1.823325] (ydlidar) StdoutLine: {'line': b'[ 18%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/ydlidar_driver.cpp.o\x1b[0m\n'}
[1.823567] (ydlidar) StdoutLine: {'line': b'[ 18%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/impl/unix/list_ports_linux.cpp.o\x1b[0m\n'}
[1.825633] (ydlidar) StdoutLine: {'line': b'[ 27%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_client.dir/src/ydlidar_client.cpp.o\x1b[0m\n'}
[1.825822] (ydlidar) StdoutLine: {'line': b'[ 36%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/impl/unix/unix_serial.cpp.o\x1b[0m\n'}
[1.825935] (ydlidar) StdoutLine: {'line': b'[ 45%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/serial.cpp.o\x1b[0m\n'}
[1.829038] (ydlidar) StdoutLine: {'line': b'[ 63%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_node.dir/src/ydlidar_node.cpp.o\x1b[0m\n'}
[1.829203] (ydlidar) StdoutLine: {'line': b'[ 63%] \x1b[32mBuilding C object CMakeFiles/ydlidar_node.dir/sdk/src/lock.c.o\x1b[0m\n'}
[1.829291] (ydlidar) StdoutLine: {'line': b'[ 72%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/CYdLidar.cpp.o\x1b[0m\n'}
[1.829512] (ydlidar) StdoutLine: {'line': b'[ 81%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/impl/unix/unix_timer.cpp.o\x1b[0m\n'}
[1.856105] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kfhs_lock\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.856402] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:199:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.856468] (ydlidar) StderrLine: {'line': b'  199 | int fhs_lock(const char *filename, \x1b[01;35m\x1b[Kint pid\x1b[m\x1b[K) {\n'}
[1.856534] (ydlidar) StderrLine: {'line': b'      |                                    \x1b[01;35m\x1b[K~~~~^~~\x1b[m\x1b[K\n'}
[1.856596] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kuucp_lock\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.856655] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/lock.c:281:41:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kpid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.856715] (ydlidar) StderrLine: {'line': b'  281 | int uucp_lock(const char *filename, \x1b[01;35m\x1b[Kint pid\x1b[m\x1b[K) {\n'}
[1.856774] (ydlidar) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K~~~~^~~\x1b[m\x1b[K\n'}
[1.904927] (-) TimerEvent: {}
[1.960797] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/timer.h:2\x1b[m\x1b[K,\n'}
[1.961034] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_timer.cpp:2\x1b[m\x1b[K:\n'}
[1.961135] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::fileExists(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.961252] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ino\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.961357] (ydlidar) StderrLine: {'line': b'  240 |   struct stat info = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[1.961437] (ydlidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.961514] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_nlink\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.961591] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.961666] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_uid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.961742] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_gid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.961816] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__pad0\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.961907] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_rdev\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.961986] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.962061] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blksize\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.962132] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blocks\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.962203] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_atim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.962275] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mtim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.962346] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ctim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[1.962429] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__glibc_reserved\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.005067] (-) TimerEvent: {}
[2.034725] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9\x1b[m\x1b[K,\n'}
[2.034978] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.h:9\x1b[m\x1b[K,\n'}
[2.035192] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.cpp:39\x1b[m\x1b[K:\n'}
[2.035382] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::fileExists(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.035488] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ino\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.035582] (ydlidar) StderrLine: {'line': b'  240 |   struct stat info = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[2.035663] (ydlidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.035740] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_nlink\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.035834] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.035914] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_uid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.035991] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_gid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036066] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__pad0\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036125] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_rdev\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036159] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036196] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blksize\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036231] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blocks\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036265] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_atim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036299] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mtim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036332] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ctim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.036366] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__glibc_reserved\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.041360] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool serial::Serial::SerialImpl::setCustomBaudRate(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.041574] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/unix_serial.cpp:1235:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[2.041688] (ydlidar) StderrLine: {'line': b' 1235 |   if (\x1b[01;35m\x1b[Kserial.custom_divisor * baudrate != serial.baud_base\x1b[m\x1b[K) {\n'}
[2.041773] (ydlidar) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.098022] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9\x1b[m\x1b[K,\n'}
[2.098255] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/list_ports_linux.cpp:26\x1b[m\x1b[K:\n'}
[2.098574] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::fileExists(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.098683] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ino\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.098777] (ydlidar) StderrLine: {'line': b'  240 |   struct stat info = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[2.098857] (ydlidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.098933] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_nlink\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099016] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099097] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_uid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099176] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_gid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099267] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__pad0\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099361] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_rdev\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099439] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099519] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blksize\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099597] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blocks\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099674] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_atim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099749] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mtim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099823] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ctim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099898] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__glibc_reserved\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.099982] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9\x1b[m\x1b[K,\n'}
[2.100058] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:54\x1b[m\x1b[K,\n'}
[2.100132] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36\x1b[m\x1b[K,\n'}
[2.100205] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:34\x1b[m\x1b[K:\n'}
[2.100278] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::fileExists(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.100351] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ino\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.100424] (ydlidar) StderrLine: {'line': b'  240 |   struct stat info = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[2.100494] (ydlidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.100570] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_nlink\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.100644] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.100717] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_uid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.100790] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_gid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.100863] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__pad0\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.100939] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_rdev\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101018] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101094] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blksize\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101336] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blocks\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101454] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_atim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101549] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mtim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101637] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ctim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101871] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__glibc_reserved\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.101983] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:56\x1b[m\x1b[K,\n'}
[2.102085] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36\x1b[m\x1b[K,\n'}
[2.102183] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:34\x1b[m\x1b[K:\n'}
[2.102268] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic Thread Thread::createThread(thread_proc_t, void*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.102357] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcast between incompatible function types from \xe2\x80\x98\x1b[01m\x1b[Kthread_proc_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int (*)(void*)\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kvoid* (*)(void*)\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wcast-function-type\x1b[m\x1b[K]\n'}
[2.102442] (ydlidar) StderrLine: {'line': b'   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))\x1b[01;35m\x1b[Kproc\x1b[m\x1b[K,\n'}
[2.102521] (ydlidar) StderrLine: {'line': b'      |                                                                            \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.102604] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/list_ports_linux.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<std::__cxx11::basic_string<char> > glob(const std::vector<std::__cxx11::basic_string<char> >&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.102686] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/impl/unix/list_ports_linux.cpp:58:7:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kvariable \xe2\x80\x98\x1b[01m\x1b[Kglob_retval\x1b[m\x1b[K\xe2\x80\x99 set but not used [\x1b[01;35m\x1b[K-Wunused-but-set-variable\x1b[m\x1b[K]\n'}
[2.102764] (ydlidar) StderrLine: {'line': b'   58 |   int \x1b[01;35m\x1b[Kglob_retval\x1b[m\x1b[K = glob(patterns[0].c_str(), 0, NULL, &glob_results);\n'}
[2.102839] (ydlidar) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.105163] (-) TimerEvent: {}
[2.109270] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:58\x1b[m\x1b[K,\n'}
[2.109486] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36\x1b[m\x1b[K,\n'}
[2.109586] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:34\x1b[m\x1b[K:\n'}
[2.109674] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::isSupportMotorCtrl(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.109774] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:414:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kvariable \xe2\x80\x98\x1b[01m\x1b[Kret\x1b[m\x1b[K\xe2\x80\x99 set but not used [\x1b[01;35m\x1b[K-Wunused-but-set-variable\x1b[m\x1b[K]\n'}
[2.109864] (ydlidar) StderrLine: {'line': b'  414 |   bool \x1b[01;35m\x1b[Kret\x1b[m\x1b[K = false;\n'}
[2.109943] (ydlidar) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.112098] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9\x1b[m\x1b[K,\n'}
[2.112327] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:54\x1b[m\x1b[K,\n'}
[2.112379] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:34\x1b[m\x1b[K:\n'}
[2.112419] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::fileExists(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.112460] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ino\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112499] (ydlidar) StderrLine: {'line': b'  240 |   struct stat info = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[2.112535] (ydlidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.112570] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_nlink\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112607] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112645] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_uid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112681] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_gid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112715] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__pad0\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112761] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_rdev\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112798] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112835] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blksize\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112870] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blocks\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112907] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_atim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112941] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mtim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.112977] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ctim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.113013] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__glibc_reserved\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.115009] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:56\x1b[m\x1b[K,\n'}
[2.115086] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:34\x1b[m\x1b[K:\n'}
[2.115133] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic Thread Thread::createThread(thread_proc_t, void*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.115175] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcast between incompatible function types from \xe2\x80\x98\x1b[01m\x1b[Kthread_proc_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int (*)(void*)\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kvoid* (*)(void*)\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wcast-function-type\x1b[m\x1b[K]\n'}
[2.115236] (ydlidar) StderrLine: {'line': b'   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))\x1b[01;35m\x1b[Kproc\x1b[m\x1b[K,\n'}
[2.115276] (ydlidar) StderrLine: {'line': b'      |                                                                            \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.123016] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:58\x1b[m\x1b[K,\n'}
[2.123261] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:34\x1b[m\x1b[K:\n'}
[2.123371] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::isSupportMotorCtrl(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.123457] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:414:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kvariable \xe2\x80\x98\x1b[01m\x1b[Kret\x1b[m\x1b[K\xe2\x80\x99 set but not used [\x1b[01;35m\x1b[K-Wunused-but-set-variable\x1b[m\x1b[K]\n'}
[2.123541] (ydlidar) StderrLine: {'line': b'  414 |   bool \x1b[01;35m\x1b[Kret\x1b[m\x1b[K = false;\n'}
[2.123632] (ydlidar) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.168164] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::YDlidarDriver::waitPackage(node_info*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.168392] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/ydlidar_driver.cpp:992:95:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ksuggest parentheses around arithmetic in operand of \xe2\x80\x98\x1b[01m\x1b[K|\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wparentheses\x1b[m\x1b[K]\n'}
[2.168495] (ydlidar) StderrLine: {'line': b'  992 |                                          \x1b[01;35m\x1b[Kpackages.packageSampleDistance[package_Sample_Index] &\x1b[m\x1b[K\n'}
[2.168582] (ydlidar) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[2.168678] (ydlidar) StderrLine: {'line': b'  993 | \x1b[01;35m\x1b[K                                         0x0003\x1b[m\x1b[K)) << LIDAR_RESP_MEASUREMENT_QUALITY_SHIFT;\n'}
[2.168761] (ydlidar) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K~~~~~~\x1b[m\x1b[K                                                \n'}
[2.200261] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9\x1b[m\x1b[K,\n'}
[2.200484] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/serial.cpp:11\x1b[m\x1b[K:\n'}
[2.200590] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::fileExists(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.200681] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ino\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.200768] (ydlidar) StderrLine: {'line': b'  240 |   struct stat info = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[2.200845] (ydlidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.200921] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_nlink\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.200997] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201071] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_uid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201154] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_gid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201230] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__pad0\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201310] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_rdev\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201382] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201453] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blksize\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201523] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blocks\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201592] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_atim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201662] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mtim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201733] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ctim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.201807] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__glibc_reserved\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[2.205277] (-) TimerEvent: {}
[2.219381] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::doProcessSimple(LaserScan&, bool&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.219614] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/CYdLidar.cpp:216:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ksize_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[2.219737] (ydlidar) StderrLine: {'line': b'  216 |     for (int i = 0; \x1b[01;35m\x1b[Ki < count\x1b[m\x1b[K; i++) {\n'}
[2.219825] (ydlidar) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K~~^~~~~~~\x1b[m\x1b[K\n'}
[2.233454] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/common.h:47\x1b[m\x1b[K,\n'}
[2.233687] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/src/serial.cpp:12\x1b[m\x1b[K:\n'}
[2.233809] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic Thread Thread::createThread(thread_proc_t, void*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.233911] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcast between incompatible function types from \xe2\x80\x98\x1b[01m\x1b[Kthread_proc_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int (*)(void*)\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kvoid* (*)(void*)\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wcast-function-type\x1b[m\x1b[K]\n'}
[2.234015] (ydlidar) StderrLine: {'line': b'   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))\x1b[01;35m\x1b[Kproc\x1b[m\x1b[K,\n'}
[2.234096] (ydlidar) StderrLine: {'line': b'      |                                                                            \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.305415] (-) TimerEvent: {}
[2.405759] (-) TimerEvent: {}
[2.506553] (-) TimerEvent: {}
[2.607317] (-) TimerEvent: {}
[2.707683] (-) TimerEvent: {}
[2.808420] (-) TimerEvent: {}
[2.909162] (-) TimerEvent: {}
[2.999357] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/serial.h:9\x1b[m\x1b[K,\n'}
[2.999588] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:54\x1b[m\x1b[K,\n'}
[2.999688] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36\x1b[m\x1b[K,\n'}
[2.999774] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:26\x1b[m\x1b[K:\n'}
[2.999851] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::fileExists(std::string)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.999928] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ino\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000006] (ydlidar) StderrLine: {'line': b'  240 |   struct stat info = {0\x1b[01;35m\x1b[K}\x1b[m\x1b[K;\n'}
[3.000083] (ydlidar) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.000159] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_nlink\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000239] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mode\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000314] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_uid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000387] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_gid\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000477] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__pad0\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000551] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_rdev\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000624] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000695] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blksize\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000766] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_blocks\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000849] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_atim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000924] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_mtim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.000995] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::st_ctim\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.001200] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/v8stdint.h:240:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kmissing initializer for member \xe2\x80\x98\x1b[01m\x1b[Kstat::__glibc_reserved\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wmissing-field-initializers\x1b[m\x1b[K]\n'}
[3.001337] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:56\x1b[m\x1b[K,\n'}
[3.001433] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36\x1b[m\x1b[K,\n'}
[3.001528] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:26\x1b[m\x1b[K:\n'}
[3.001610] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:\x1b[m\x1b[K In static member function \xe2\x80\x98\x1b[01m\x1b[Kstatic Thread Thread::createThread(thread_proc_t, void*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.001689] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/thread.h:43:76:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcast between incompatible function types from \xe2\x80\x98\x1b[01m\x1b[Kthread_proc_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int (*)(void*)\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kvoid* (*)(void*)\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wcast-function-type\x1b[m\x1b[K]\n'}
[3.001780] (ydlidar) StderrLine: {'line': b'   43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))\x1b[01;35m\x1b[Kproc\x1b[m\x1b[K,\n'}
[3.001858] (ydlidar) StderrLine: {'line': b'      |                                                                            \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.007734] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/ydlidar_driver.h:58\x1b[m\x1b[K,\n'}
[3.007897] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/CYdLidar.h:36\x1b[m\x1b[K,\n'}
[3.007997] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:26\x1b[m\x1b[K:\n'}
[3.008081] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::isSupportMotorCtrl(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.008159] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/sdk/include/help_info.h:414:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kvariable \xe2\x80\x98\x1b[01m\x1b[Kret\x1b[m\x1b[K\xe2\x80\x99 set but not used [\x1b[01;35m\x1b[K-Wunused-but-set-variable\x1b[m\x1b[K]\n'}
[3.008238] (ydlidar) StderrLine: {'line': b'  414 |   bool \x1b[01;35m\x1b[Kret\x1b[m\x1b[K = false;\n'}
[3.008311] (ydlidar) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.009261] (-) TimerEvent: {}
[3.015432] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.015595] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:78:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.015706] (ydlidar) StderrLine: {'line': b'   78 |   node->declare_parameter("port"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.015797] (ydlidar) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.015879] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.015963] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.016044] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.016120] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.016389] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.016502] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.016552] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.016590] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:81:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.016634] (ydlidar) StderrLine: {'line': b'   81 |   node->declare_parameter("frame_id"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.016672] (ydlidar) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.016708] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.016742] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.016776] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.016809] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.016844] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.016878] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.016910] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.016942] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:84:41:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.016982] (ydlidar) StderrLine: {'line': b'   84 |   node->declare_parameter("ignore_array"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.017017] (ydlidar) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.017050] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.017083] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.017116] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.017148] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.017185] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.017219] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.017251] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.017284] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:87:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.017320] (ydlidar) StderrLine: {'line': b'   87 |   node->declare_parameter("baudrate"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.017352] (ydlidar) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.017390] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.017424] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.017456] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.017488] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.017521] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.017554] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.017587] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.017622] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:90:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.017660] (ydlidar) StderrLine: {'line': b'   90 |   node->declare_parameter("samp_rate"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.017693] (ydlidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.017726] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.017760] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.017793] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.017829] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.017862] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.017896] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.017930] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.017962] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:93:45:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.017998] (ydlidar) StderrLine: {'line': b'   93 |   node->declare_parameter("resolution_fixed"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.018031] (ydlidar) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.018064] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.018098] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.018131] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.018164] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.018199] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.018233] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.018266] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.018298] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:96:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.018340] (ydlidar) StderrLine: {'line': b'   96 |   node->declare_parameter("singleChannel"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.018373] (ydlidar) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.018408] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.018444] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.018476] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.018508] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.018540] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.018572] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.018605] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.018638] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:99:43:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.018674] (ydlidar) StderrLine: {'line': b'   99 |   node->declare_parameter("auto_reconnect"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.018706] (ydlidar) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.018741] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.018773] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.018806] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.018838] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.018871] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.018903] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.018936] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.018968] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:102:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.019005] (ydlidar) StderrLine: {'line': b'  102 |   node->declare_parameter("reversion"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.019041] (ydlidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.019074] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.019107] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.019139] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.019171] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.019223] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.019262] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.019296] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.019329] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:105:39:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.019373] (ydlidar) StderrLine: {'line': b'  105 |   node->declare_parameter("isToFLidar"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.019408] (ydlidar) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.019440] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.019473] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.019505] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.019538] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.019570] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.019603] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.019634] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.019666] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:108:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.019705] (ydlidar) StderrLine: {'line': b'  108 |   node->declare_parameter("angle_max"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.019737] (ydlidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.019769] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.019801] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.019833] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.019865] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.019897] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.019928] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.019959] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.019990] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:111:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.020025] (ydlidar) StderrLine: {'line': b'  111 |   node->declare_parameter("angle_min"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.020057] (ydlidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.020089] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.020120] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.020152] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.020191] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.020225] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.020257] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.020289] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.020322] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:114:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.020361] (ydlidar) StderrLine: {'line': b'  114 |   node->declare_parameter("max_range"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.020395] (ydlidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.020427] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.020460] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.020492] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.020524] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.020556] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.020588] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.020620] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.020652] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:117:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.020687] (ydlidar) StderrLine: {'line': b'  117 |   node->declare_parameter("min_range"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.020719] (ydlidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.020751] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.020783] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.020814] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.020846] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.020877] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.020909] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.020940] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.020971] (ydlidar) StderrLine: {'line': b"\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:120:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)\x1b[m\x1b[K\xe2\x80\x99 is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\\nIf you want to declare a parameter that won't change type without a default value use:\\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\\n\\nIf you want to declare a parameter that can dynamically change type use:\\n```\\nrcl_interfaces::msg::ParameterDescriptor descriptor;\\ndescriptor.dynamic_typing = true;\\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\\n``` [\x1b[01;35m\x1b[K-Wdeprecated-declarations\x1b[m\x1b[K]\n"}
[3.021012] (ydlidar) StderrLine: {'line': b'  120 |   node->declare_parameter("frequency"\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.021049] (ydlidar) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.021083] (ydlidar) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[3.021117] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[3.021149] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156\x1b[m\x1b[K,\n'}
[3.021181] (ydlidar) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:23\x1b[m\x1b[K:\n'}
[3.021213] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[3.021245] (ydlidar) StderrLine: {'line': b'  422 |   \x1b[01;36m\x1b[Kdeclare_parameter\x1b[m\x1b[K(const std::string & name);\n'}
[3.021276] (ydlidar) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.021375] (ydlidar) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ohj/mecanum-ros2/src/ydlidar_ros2/src/ydlidar_node.cpp:208:22:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcomparison of integer expressions of different signedness: \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wsign-compare\x1b[m\x1b[K]\n'}
[3.021428] (ydlidar) StderrLine: {'line': b'  208 |       for(int i=0; \x1b[01;35m\x1b[Ki < scan.points.size()\x1b[m\x1b[K; i++) {\n'}
[3.021462] (ydlidar) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K~~^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.109760] (-) TimerEvent: {}
[3.210501] (-) TimerEvent: {}
[3.311253] (-) TimerEvent: {}
[3.411935] (-) TimerEvent: {}
[3.512269] (-) TimerEvent: {}
[3.612603] (-) TimerEvent: {}
[3.712939] (-) TimerEvent: {}
[3.814031] (-) TimerEvent: {}
[3.914763] (-) TimerEvent: {}
[4.015580] (-) TimerEvent: {}
[4.115913] (-) TimerEvent: {}
[4.216238] (-) TimerEvent: {}
[4.316566] (-) TimerEvent: {}
[4.417629] (-) TimerEvent: {}
[4.518359] (-) TimerEvent: {}
[4.562929] (ydlidar) StdoutLine: {'line': b'[ 90%] \x1b[32m\x1b[1mLinking CXX executable ydlidar_node\x1b[0m\n'}
[4.618450] (-) TimerEvent: {}
[4.719140] (-) TimerEvent: {}
[4.719907] (ydlidar) StdoutLine: {'line': b'[ 90%] Built target ydlidar_node\n'}
[4.819272] (-) TimerEvent: {}
[4.919686] (-) TimerEvent: {}
[5.019999] (-) TimerEvent: {}
[5.120316] (-) TimerEvent: {}
[5.220628] (-) TimerEvent: {}
[5.320940] (-) TimerEvent: {}
[5.421258] (-) TimerEvent: {}
[5.521569] (-) TimerEvent: {}
[5.621884] (-) TimerEvent: {}
[5.722199] (-) TimerEvent: {}
[5.822512] (-) TimerEvent: {}
[5.922829] (-) TimerEvent: {}
[6.023142] (-) TimerEvent: {}
[6.123665] (-) TimerEvent: {}
[6.223980] (-) TimerEvent: {}
[6.324746] (-) TimerEvent: {}
[6.425143] (-) TimerEvent: {}
[6.525471] (-) TimerEvent: {}
[6.586563] (ydlidar) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable ydlidar_client\x1b[0m\n'}
[6.625680] (-) TimerEvent: {}
[6.726026] (-) TimerEvent: {}
[6.767090] (ydlidar) StdoutLine: {'line': b'[100%] Built target ydlidar_client\n'}
[6.776766] (ydlidar) CommandEnded: {'returncode': 0}
[6.810715] (ydlidar) JobProgress: {'identifier': 'ydlidar', 'progress': 'install'}
[6.811008] (ydlidar) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ohj/mecanum-ros2/build/ydlidar'], 'cwd': '/home/ohj/mecanum-ros2/build/ydlidar', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'ohj'), ('LC_TIME', 'ko_KR.UTF-8'), ('SSH_AGENT_PID', '2054'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/ohj'), ('OLDPWD', '/home/ohj/mecanum-ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('MANAGERPID', '1805'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '3103'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'ohj'), ('JOURNAL_STREAM', '8:48869'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ohj'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/home/ohj/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ohj:@/tmp/.ICE-unix/2128,unix/ohj:/tmp/.ICE-unix/2128'), ('INVOCATION_ID', 'a24701f73b2d40fe8a769f82d9a493b6'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ko_KR.UTF-8'), ('TERMINATOR_UUID', 'urn:uuid:6612191f-c039-4fc8-b348-98a0504b93d0'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ohj/mecanum-ros2/build/ydlidar'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/galactic/lib/python3.8/site-packages'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/galactic')]), 'shell': False}
[6.815993] (ydlidar) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[6.816162] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/lib/ydlidar/ydlidar_node\n'}
[6.816772] (ydlidar) StdoutLine: {'line': b'-- Set runtime path of "/home/ohj/mecanum-ros2/install/ydlidar/lib/ydlidar/ydlidar_node" to ""\n'}
[6.816889] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/lib/ydlidar/ydlidar_client\n'}
[6.818206] (ydlidar) StdoutLine: {'line': b'-- Set runtime path of "/home/ohj/mecanum-ros2/install/ydlidar/lib/ydlidar/ydlidar_client" to ""\n'}
[6.818291] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/launch\n'}
[6.818419] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/launch/ydlidar.py\n'}
[6.818499] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/launch/ydlidar_launch.py\n'}
[6.818572] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/params\n'}
[6.818645] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/params/ydlidar.yaml\n'}
[6.818749] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/startup\n'}
[6.818826] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/startup/initenv.sh\n'}
[6.819006] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ament_index/resource_index/package_run_dependencies/ydlidar\n'}
[6.819111] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ament_index/resource_index/parent_prefix_path/ydlidar\n'}
[6.819265] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/environment/ament_prefix_path.sh\n'}
[6.819405] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/environment/ament_prefix_path.dsv\n'}
[6.819514] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/environment/path.sh\n'}
[6.819606] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/environment/path.dsv\n'}
[6.819683] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/local_setup.bash\n'}
[6.819793] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/local_setup.sh\n'}
[6.819872] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/local_setup.zsh\n'}
[6.819968] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/local_setup.dsv\n'}
[6.820046] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/package.dsv\n'}
[6.820118] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ament_index/resource_index/packages/ydlidar\n'}
[6.820227] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/cmake/ydlidarConfig.cmake\n'}
[6.820304] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/cmake/ydlidarConfig-version.cmake\n'}
[6.820383] (ydlidar) StdoutLine: {'line': b'-- Installing: /home/ohj/mecanum-ros2/install/ydlidar/share/ydlidar/package.xml\n'}
[6.821227] (ydlidar) CommandEnded: {'returncode': 0}
[6.826104] (-) TimerEvent: {}
[6.883271] (ydlidar) JobEnded: {'identifier': 'ydlidar', 'rc': 0}
[6.884480] (-) EventReactorShutdown: {}
